set(TARGET_NAME RCppLib)

find_package(Rcpp REQUIRED)
file(GLOB_RECURSE sources src/*.cpp src/*.h src/*.hpp)
file(GLOB_RECURSE rfiles R/*.R)

macro(create_file_if_not_existing filename content)
    if (NOT EXISTS "${filename}")
        file(WRITE "${filename}" "${content}")
    endif ()
endmacro()
set(RCPP_EXPORTS_FILE "${CMAKE_CURRENT_BINARY_DIR}/src/RcppExports.cpp")
create_file_if_not_existing(${RCPP_EXPORTS_FILE} "")
create_file_if_not_existing("${CMAKE_CURRENT_BINARY_DIR}/NAMESPACE" "# Generated by roxygen2: do not edit by hand")
list(APPEND sources "${RCPP_EXPORTS_FILE}")

add_library(${TARGET_NAME} MODULE ${sources})
set_source_files_properties(${RCPP_EXPORTS_FILE} PROPERTIES COMPILE_FLAGS
        "$<$<CXX_COMPILER_ID:GNU>:-Wno-old-style-cast> -Wno-cast-function-type")

execute_process(COMMAND "${R_COMMAND}" --silent --slave -e "cat(R.Version()$platform)" OUTPUT_VARIABLE R_PLATFORM)
if (WIN32)
    set(RPACKAGE_PLATFORM_POSTFIX ".zip")
    create_file_if_not_existing("${CMAKE_CURRENT_BINARY_DIR}/src/Makefile.win" "all:")
else ()
    set(RPACKAGE_PLATFORM_POSTFIX "_R_${R_PLATFORM}.tar.gz")
    create_file_if_not_existing("${CMAKE_CURRENT_BINARY_DIR}/src/Makefile" "all:")
endif ()
set(RPACKAGE_NAME ${TARGET_NAME}_${CppLIB_VERSION}${RPACKAGE_PLATFORM_POSTFIX})
message(STATUS "Detected RPackage filename ${RPACKAGE_NAME}")

target_link_libraries(${TARGET_NAME} PRIVATE rcpp CppLib)
target_compile_definitions(${TARGET_NAME} PRIVATE $<$<AND:$<CXX_COMPILER_ID:GNU>,$<PLATFORM_ID:Windows>>:STRICT_R_HEADERS>)
target_link_options(${TARGET_NAME} PRIVATE $<$<CXX_COMPILER_ID:GNU>:-Wl,--no-undefined>)

set_target_properties(${TARGET_NAME} PROPERTIES
        PREFIX ""
        LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/src")

configure_file(DESCRIPTION.in ${CMAKE_CURRENT_BINARY_DIR}/DESCRIPTION @ONLY)

add_library(RPackageRScripts INTERFACE)
target_sources(RPackageRScripts INTERFACE ${rfiles})

add_custom_target(RcppCompileAttributes
        COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${CMAKE_CURRENT_SOURCE_DIR}/R ${CMAKE_CURRENT_BINARY_DIR}/R
        COMMAND ${CMAKE_COMMAND} -E copy_directory
        ${CMAKE_CURRENT_SOURCE_DIR}/src ${CMAKE_CURRENT_BINARY_DIR}/src
        COMMAND "${R_COMMAND}" --silent -e "\"library(Rcpp);Rcpp::compileAttributes()\""
        COMMAND "${R_COMMAND}" --silent -e "\"library(roxygen2);roxygen2::roxygenise(load_code=load_source)\""
        WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
        COMMENT "Running Rcpp::compileAttributes and roxygen2::roxygenise")

add_custom_target(RPackageBuild
        COMMAND ${CMAKE_COMMAND} -E remove_directory ${CMAKE_CURRENT_BINARY_DIR}/_build_tmp
        COMMAND ${CMAKE_COMMAND} -E remove_directory ${CMAKE_CURRENT_BINARY_DIR}/Rpkg/man
        COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/_build_tmp
        COMMAND "${R_COMMAND}" CMD INSTALL --build --library=_build_tmp .
        WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
        COMMENT "Building Rpackage"
        )
add_dependencies(${TARGET_NAME} RcppCompileAttributes)
add_dependencies(RPackageBuild ${TARGET_NAME} RPackageRScripts)

set_target_properties(RPackageBuild PROPERTIES Package_Name ${RPACKAGE_NAME})
add_custom_target(RPackageInstall
        COMMAND "${R_COMMAND}" CMD INSTALL ${TARGET_NAME}_${CppLIB_VERSION}${RPACKAGE_PLATFORM_POSTFIX}
        WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
        COMMENT "Installing ${TARGET_NAME} within R"
        )
add_dependencies(RPackageInstall RPackageBuild)
